1 . Price Check

def priceCheck(products, productPrices, productSold, soldPrice):
    errors = 0
    
    # Create a dictionary to map product names to their correct prices
    product_dict = {products[i]: productPrices[i] for i in range(len(products))}
    
    # Iterate through the sold products and compare their prices
    for i in range(len(productSold)):
        if product_dict[productSold[i]] != soldPrice[i]:
            errors += 1
            
    return errors

# Example usage:
products = ["eggs", "milk", "cheese"]
productPrices = [2.89, 3.29, 5.79]
productSold = ["eggs", "eggs", "cheese", "milk"]
soldPrice = [2.89, 2.99, 5.97, 3.29]

# Call the function
result = priceCheck(products, productPrices, productSold, soldPrice)
print(result)  # Output: 2


2.younger employee : 
SELECT EMPLOYEE_UIN.UIN, EMPLOYEE.NAME
FROM EMPLOYEE
JOIN EMPLOYEE_UIN ON EMPLOYEE.ID = EMPLOYEE_UIN.ID
WHERE EMPLOYEE.AGE < 25
ORDER BY EMPLOYEE.NAME ASC, EMPLOYEE.ID ASC;


3.A deque (double-ended queue) allows for efficient insertion and deletion from both the beginning and the end in O(1) time. Other structures like vector, stack, or segment tree do not provide this capability in constant time.

4.SELECT, FROM, JOIN, WHERE, GROUP BY, HAVING, ORDER BY.
